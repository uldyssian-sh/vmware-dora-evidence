{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"VMware DORA Evidence","text":"<p>Welcome to VMware DORA Evidence documentation.</p>"},{"location":"#installation","title":"Installation","text":"<p>See Installation Guide for setup instructions.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>DORA metrics collection</li> <li>VMware integration</li> <li>Comprehensive reporting</li> <li>Security-first approach</li> </ul>"},{"location":"installation/","title":"Installation Guide","text":"<p>This guide provides detailed instructions for installing and setting up VMware DORA Evidence.</p>"},{"location":"installation/#table-of-contents","title":"Table of Contents","text":"<ul> <li>System Requirements</li> <li>Installation Methods</li> <li>Configuration</li> <li>Verification</li> <li>Troubleshooting</li> </ul>"},{"location":"installation/#system-requirements","title":"System Requirements","text":""},{"location":"installation/#minimum-requirements","title":"Minimum Requirements","text":"<ul> <li>Operating System: Linux, macOS, or Windows</li> <li>Python: 3.8 or higher</li> <li>Memory: 2 GB RAM</li> <li>Storage: 1 GB free space</li> <li>Network: Access to VMware vCenter Server</li> </ul>"},{"location":"installation/#recommended-requirements","title":"Recommended Requirements","text":"<ul> <li>Operating System: Linux (Ubuntu 20.04+ or CentOS 8+)</li> <li>Python: 3.10 or higher</li> <li>Memory: 4 GB RAM</li> <li>Storage: 5 GB free space</li> <li>Network: Dedicated network connection to VMware infrastructure</li> </ul>"},{"location":"installation/#vmware-environment-requirements","title":"VMware Environment Requirements","text":"<ul> <li>vCenter Server: 6.7 or higher</li> <li>ESXi Hosts: 6.7 or higher</li> <li>Permissions: Read access to vCenter events and inventory</li> <li>Network: HTTPS (443) access to vCenter Server</li> </ul>"},{"location":"installation/#installation-methods","title":"Installation Methods","text":""},{"location":"installation/#method-1-pip-installation-recommended","title":"Method 1: pip Installation (Recommended)","text":"<pre><code># Install from PyPI (when available)\npip install vmware-dora-evidence\n\n# Or install from source\npip install git+https://github.com/uldyssian-sh/vmware-dora-evidence.git\n</code></pre>"},{"location":"installation/#method-2-source-installation","title":"Method 2: Source Installation","text":"<pre><code># Clone the repository\ngit clone https://github.com/uldyssian-sh/vmware-dora-evidence.git\ncd vmware-dora-evidence\n\n# Create virtual environment\npython -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n\n# Install dependencies\npip install -r requirements.txt\n\n# Install in development mode\npip install -e .\n</code></pre>"},{"location":"installation/#method-3-docker-installation","title":"Method 3: Docker Installation","text":"<pre><code># Pull the Docker image\ndocker pull ghcr.io/uldyssian-sh/vmware-dora-evidence:latest\n\n# Run the container\ndocker run -d \\\n  --name dora-evidence \\\n  -v $(pwd)/config:/app/config \\\n  -v $(pwd)/data:/app/data \\\n  ghcr.io/uldyssian-sh/vmware-dora-evidence:latest\n</code></pre>"},{"location":"installation/#method-4-kubernetes-deployment","title":"Method 4: Kubernetes Deployment","text":"<pre><code># Apply Kubernetes manifests\nkubectl apply -f k8s/namespace.yaml\nkubectl apply -f k8s/configmap.yaml\nkubectl apply -f k8s/secret.yaml\nkubectl apply -f k8s/deployment.yaml\nkubectl apply -f k8s/service.yaml\n</code></pre>"},{"location":"installation/#configuration","title":"Configuration","text":""},{"location":"installation/#step-1-create-configuration-file","title":"Step 1: Create Configuration File","text":"<pre><code># Copy the template\ncp config/config.template.yaml config/config.yaml\n\n# Edit the configuration\nnano config/config.yaml\n</code></pre>"},{"location":"installation/#step-2-configure-vmware-connection","title":"Step 2: Configure VMware Connection","text":"<pre><code>vmware:\n  vcenter_host: \"your-vcenter.example.com\"\n  username: \"your-username\"\n  password: \"your-password\"  # Use environment variables in production\n  port: 443\n  ignore_ssl_errors: false\n</code></pre>"},{"location":"installation/#step-3-environment-variables-recommended","title":"Step 3: Environment Variables (Recommended)","text":"<p>Create a <code>.env</code> file or set environment variables:</p> <pre><code># VMware Configuration\nexport VMWARE_VCENTER_HOST=\"your-vcenter.example.com\"\nexport VMWARE_USERNAME=\"your-username\"\nexport VMWARE_PASSWORD=\"your-password\"\nexport VMWARE_PORT=\"443\"\nexport VMWARE_IGNORE_SSL=\"false\"\n\n# Database Configuration\nexport DATABASE_URL=\"sqlite:///dora_evidence.db\"\n\n# Logging Configuration\nexport LOG_LEVEL=\"INFO\"\n</code></pre>"},{"location":"installation/#step-4-database-setup","title":"Step 4: Database Setup","text":""},{"location":"installation/#sqlite-default","title":"SQLite (Default)","text":"<pre><code># No additional setup required\n# Database file will be created automatically\n</code></pre>"},{"location":"installation/#postgresql","title":"PostgreSQL","text":"<pre><code># Install PostgreSQL client\npip install psycopg2-binary\n\n# Create database\ncreatedb dora_evidence\n\n# Update configuration\nexport DATABASE_URL=\"postgresql://user:password@localhost:5432/dora_evidence\"\n</code></pre>"},{"location":"installation/#mysql","title":"MySQL","text":"<pre><code># Install MySQL client\npip install PyMySQL\n\n# Create database\nmysql -u root -p -e \"CREATE DATABASE dora_evidence;\"\n\n# Update configuration\nexport DATABASE_URL=\"mysql://user:password@localhost:3306/dora_evidence\"\n</code></pre>"},{"location":"installation/#verification","title":"Verification","text":""},{"location":"installation/#step-1-test-vmware-connection","title":"Step 1: Test VMware Connection","text":"<pre><code># Test connection\npython -c \"\nfrom src.integrations.vmware_client import VMwareClient\nfrom src.utils.config_manager import ConfigManager\n\nconfig = ConfigManager().get_vmware_config()\nclient = VMwareClient(config)\nprint('Connection successful!' if client.test_connection() else 'Connection failed!')\n\"\n</code></pre>"},{"location":"installation/#step-2-run-basic-collection","title":"Step 2: Run Basic Collection","text":"<pre><code># Run a basic data collection\npython -c \"\nfrom src.dora_evidence import DORACollector\n\ncollector = DORACollector()\nmetrics = collector.collect_all_metrics(days=7)\nprint(f'Collected metrics: {metrics}')\n\"\n</code></pre>"},{"location":"installation/#step-3-generate-test-report","title":"Step 3: Generate Test Report","text":"<pre><code># Generate a test report\npython -c \"\nfrom src.dora_evidence import DORACollector\n\ncollector = DORACollector()\nmetrics = collector.collect_all_metrics(days=7)\nreport = collector.generate_report(metrics)\nprint('Report generated successfully!')\n\"\n</code></pre>"},{"location":"installation/#advanced-configuration","title":"Advanced Configuration","text":""},{"location":"installation/#ssl-certificate-configuration","title":"SSL Certificate Configuration","text":"<p>For environments with custom SSL certificates:</p> <pre><code>vmware:\n  vcenter_host: \"your-vcenter.example.com\"\n  username: \"your-username\"\n  password: \"your-password\"\n  port: 443\n  ignore_ssl_errors: false\n  ssl_cert_path: \"/path/to/certificate.pem\"\n  ssl_key_path: \"/path/to/private.key\"\n</code></pre>"},{"location":"installation/#proxy-configuration","title":"Proxy Configuration","text":"<p>For environments behind a proxy:</p> <pre><code>export HTTP_PROXY=\"http://proxy.example.com:8080\"\nexport HTTPS_PROXY=\"http://proxy.example.com:8080\"\nexport NO_PROXY=\"localhost,127.0.0.1\"\n</code></pre>"},{"location":"installation/#performance-tuning","title":"Performance Tuning","text":"<pre><code>performance:\n  parallel_processing:\n    enabled: true\n    max_workers: 4\n\n  cache:\n    enabled: true\n    ttl_seconds: 3600\n    max_size_mb: 100\n\n  database:\n    connection_pool_size: 10\n    query_timeout_seconds: 30\n</code></pre>"},{"location":"installation/#service-installation","title":"Service Installation","text":""},{"location":"installation/#systemd-service-linux","title":"Systemd Service (Linux)","text":"<p>Create <code>/etc/systemd/system/dora-evidence.service</code>:</p> <pre><code>[Unit]\nDescription=VMware DORA Evidence Collector\nAfter=network.target\n\n[Service]\nType=simple\nUser=dora-evidence\nGroup=dora-evidence\nWorkingDirectory=/opt/vmware-dora-evidence\nEnvironment=PATH=/opt/vmware-dora-evidence/venv/bin\nExecStart=/opt/vmware-dora-evidence/venv/bin/python -m src.cli daemon\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Enable and start the service:</p> <pre><code>sudo systemctl enable dora-evidence\nsudo systemctl start dora-evidence\nsudo systemctl status dora-evidence\n</code></pre>"},{"location":"installation/#windows-service","title":"Windows Service","text":"<p>Install as Windows service using <code>pywin32</code>:</p> <pre><code>pip install pywin32\n\n# Install service\npython scripts/windows_service.py install\n\n# Start service\npython scripts/windows_service.py start\n</code></pre>"},{"location":"installation/#docker-configuration","title":"Docker Configuration","text":""},{"location":"installation/#docker-compose","title":"Docker Compose","text":"<p>Create <code>docker-compose.yml</code>:</p> <pre><code>version: '3.8'\n\nservices:\n  dora-evidence:\n    image: ghcr.io/uldyssian-sh/vmware-dora-evidence:latest\n    container_name: dora-evidence\n    environment:\n      - VMWARE_VCENTER_HOST=${VMWARE_VCENTER_HOST}\n      - VMWARE_USERNAME=${VMWARE_USERNAME}\n      - VMWARE_PASSWORD=${VMWARE_PASSWORD}\n      - DATABASE_URL=postgresql://postgres:password@db:5432/dora_evidence\n    volumes:\n      - ./config:/app/config\n      - ./data:/app/data\n      - ./logs:/app/logs\n    depends_on:\n      - db\n    restart: unless-stopped\n\n  db:\n    image: postgres:13\n    container_name: dora-evidence-db\n    environment:\n      - POSTGRES_DB=dora_evidence\n      - POSTGRES_USER=postgres\n      - POSTGRES_PASSWORD=password\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n    restart: unless-stopped\n\nvolumes:\n  postgres_data:\n</code></pre> <p>Run with Docker Compose:</p> <pre><code>docker-compose up -d\n</code></pre>"},{"location":"installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"installation/#common-issues","title":"Common Issues","text":""},{"location":"installation/#1-vmware-connection-failed","title":"1. VMware Connection Failed","text":"<p>Error: <code>Connection to vCenter failed</code></p> <p>Solutions: - Verify vCenter hostname and port - Check network connectivity: <code>telnet vcenter-host 443</code> - Verify credentials - Check SSL certificate settings</p>"},{"location":"installation/#2-permission-denied","title":"2. Permission Denied","text":"<p>Error: <code>Permission denied accessing vCenter events</code></p> <p>Solutions: - Verify user has read permissions on vCenter - Check user role assignments - Ensure user can access event logs</p>"},{"location":"installation/#3-database-connection-failed","title":"3. Database Connection Failed","text":"<p>Error: <code>Database connection failed</code></p> <p>Solutions: - Verify database URL format - Check database server is running - Verify credentials and database exists - Check network connectivity to database</p>"},{"location":"installation/#4-import-errors","title":"4. Import Errors","text":"<p>Error: <code>ModuleNotFoundError: No module named 'pyVmomi'</code></p> <p>Solutions: <pre><code># Reinstall dependencies\npip install -r requirements.txt\n\n# Or install specific package\npip install pyvmomi\n</code></pre></p>"},{"location":"installation/#5-ssl-certificate-errors","title":"5. SSL Certificate Errors","text":"<p>Error: <code>SSL certificate verification failed</code></p> <p>Solutions: <pre><code># Temporarily ignore SSL errors (not recommended for production)\nvmware:\n  ignore_ssl_errors: true\n\n# Or provide custom certificate\nvmware:\n  ssl_cert_path: \"/path/to/certificate.pem\"\n</code></pre></p>"},{"location":"installation/#debug-mode","title":"Debug Mode","text":"<p>Enable debug logging for troubleshooting:</p> <pre><code>export LOG_LEVEL=\"DEBUG\"\n\n# Or in configuration file\nlogging:\n  level: \"DEBUG\"\n</code></pre>"},{"location":"installation/#log-files","title":"Log Files","text":"<p>Check log files for detailed error information:</p> <pre><code># Default log location\ntail -f logs/dora-evidence.log\n\n# Or check system logs\njournalctl -u dora-evidence -f\n</code></pre>"},{"location":"installation/#health-check","title":"Health Check","text":"<p>Run health check to verify installation:</p> <pre><code>python -m src.cli health-check\n</code></pre>"},{"location":"installation/#getting-help","title":"Getting Help","text":"<p>If you encounter issues not covered in this guide:</p> <ol> <li>Search existing issues</li> <li>Create a new issue</li> <li>Join our discussions</li> </ol>"},{"location":"installation/#next-steps","title":"Next Steps","text":"<p>After successful installation, you can start using the VMware DORA Evidence tool to collect and analyze metrics from your VMware environment.</p>"}]}